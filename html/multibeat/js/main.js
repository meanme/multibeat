// Generated by CoffeeScript 1.3.3

/*
User: matteo
Copyright Â© mename 2013 All rights reserved
main - Entry point for multibeatt
*/


(function() {
  var client, connection, images, imagesLoaded, imgSources, init, initApp, onImageLoaded, preloadImage, requestAnimFrame, requiredFiles, socket, socketUrl, soundMainfest, soundsLoaded;

  requiredFiles = ['Connection', 'EventManager', 'MultiBeatClient'];

  imgSources = [];

  images = [];

  imagesLoaded = 0;

  soundMainfest = [
    {
      id: "00",
      src: "src/00.wav"
    }, {
      id: "01",
      src: "src/01.wav"
    }, {
      id: "02",
      src: "src/02.wav"
    }, {
      id: "03",
      src: "src/03.wav"
    }, {
      id: "loop00",
      src: "src/loops/looperman-l-0345547-0056297-cufool-im-alive-kick-and-percussion.wav"
    }, {
      id: "loop01",
      src: "src/loops/looperman-l-0379853-0060060-alen9r-dance-time-drums.wav"
    }, {
      id: "loop02",
      src: "src/loops/looperman-l-0563503-0044350-tonypowell-trance-loop-with-bass.wav"
    }, {
      id: "loop03",
      src: "src/loops/looperman-l-0671112-0065844-danke-melodic.wav"
    }
  ];

  soundsLoaded = 0;

  socketUrl = 'http://localhost:1337/';

  socket = null;

  connection = null;

  client = null;

  preloadImage = function(imgSrc) {
    var i, _i, _ref, _results;
    if (imgSrc.length > 0) {
      _results = [];
      for (i = _i = 0, _ref = imgSrc.length; _i < _ref; i = _i += 1) {
        images[i] = new Image();
        images[i].onload = onImageLoaded;
        _results.push(images[i].src = imgSources[i]);
      }
      return _results;
    } else {
      return initApp();
    }
  };

  onImageLoaded = function(event) {
    imagesLoaded++;
    if (imagesLoaded >= imgSources.length) {
      return initApp();
    }
  };

  init = function(element) {
    var _this = this;
    $(document.body).addClass('ready');
    createjs.Sound.addEventListener('fileload', function(event) {
      if (++soundsLoaded >= soundMainfest.length) {
        return console.log('all sounds loaded');
      }
    });
    createjs.Sound.addEventListener('loadComplete', function(event) {
      console.log('manifest loaded');
      return console.log(event);
    });
    createjs.Sound.registerManifest(soundMainfest, './');
    preloadImage(imgSources);
  };

  initApp = function() {
    connection = new Connection(socketUrl);
    $("#create").click(function() {
      console.log('click create');
      return connection.create(function() {
        return $("#menuButtons").fadeOut();
      });
    });
    $("#join").click(function() {
      var groupId;
      groupId = $('#groupId').val();
      console.log(groupId);
      console.log(groupId !== "");
      if ((groupId != null) && groupId !== "") {
        return connection.join(groupId, function() {
          console.log('connection join complete');
          return $("#menuButtons").fadeOut();
        });
      } else {
        return alert('Please enter the group Id');
      }
    });
    client = new MultiBeatClient();
    /*socket = io.connect socketUrl
    socket.on 'connect', (message) ->
        console.log 'connected'
    
    socket.on 'greetings', (message) ->
        console.log "MESSAGE: #{message}"
    */

    $("#settingsButton").toggle((function() {
      return $("#cointentOffset").animate({
        left: "-360px"
      }, 1000);
    }), function() {
      return $("#cointentOffset").animate({
        left: "0px"
      }, 1000);
    });
    /*connection.create () ->
        $("#menuButtons").fadeOut()
    */

  };

  requestAnimFrame = (function() {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
      return window.setTimeout(callback, 1000 / 60);
    };
  })();

  require(requiredFiles, init);

}).call(this);
